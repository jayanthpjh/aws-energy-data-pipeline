name: Terraform Destroy + Apply

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Install JQ and make destroy script executable
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          chmod +x ./aws-nuke-us-east-1.sh

      - name: Run AWS Destroy Script
        run: |
          echo "⚠️ Running AWS Destroy Script"
          ./aws-nuke-us-east-1.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        continue-on-error: true

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Apply
        id: apply
        run: terraform -chdir=terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1

      - name: Export Terraform Outputs to Environment Variables
        if: success()
        run: |
          echo "Exporting Terraform outputs to environment variables..."
          terraform -chdir=terraform output -json > tf_outputs.json

          echo "S3_BUCKET_NAME=$(jq -r .s3_bucket_name.value tf_outputs.json)" >> $GITHUB_ENV
          echo "DYNAMODB_TABLE_NAME=$(jq -r .dynamodb_table_name.value tf_outputs.json)" >> $GITHUB_ENV
          echo "DATA_FEEDER_LAMBDA_ARN=$(jq -r .data_feeder_lambda_arn.value tf_outputs.json)" >> $GITHUB_ENV
          echo "PROCESSOR_LAMBDA_ARN=$(jq -r .processor_lambda_arn.value tf_outputs.json)" >> $GITHUB_ENV
          echo "CLOUDWATCH_EVENT_RULE_NAME=$(jq -r .cloudwatch_event_rule_name.value tf_outputs.json)" >> $GITHUB_ENV
          echo "LAMBDA_EXEC_ROLE_ARN=$(jq -r .lambda_exec_role_arn.value tf_outputs.json)" >> $GITHUB_ENV
        shell: bash
